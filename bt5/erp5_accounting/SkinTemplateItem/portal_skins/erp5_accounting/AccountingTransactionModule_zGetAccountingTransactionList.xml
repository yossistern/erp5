<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="SQL" module="Products.ZSQLMethods.SQL"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Use_Database_Methods_Permission</string> </key>
            <value>
              <list>
                <string>Member</string>
              </list>
            </value>
        </item>
        <item>
            <key> <string>allow_simple_one_argument_traversal</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>arguments_src</string> </key>
            <value> <string>selection\r\n
selection_name=None\r\n
selection_domain\r\n
selection_report\r\n
selection_params=""\r\n
from_date=""\r\n
at_date=""\r\n
to_date=""\r\n
node=""\r\n
resource=""\r\n
entity=""\r\n
stat=""\r\n
omit_input=""\r\n
omit_output=""\r\n
amount=""\r\n
amount_range_min=""\r\n
amount_range_max=""\r\n
creation_date_range_min=""\r\n
creation_date_range_max=""\r\n
section_category=""\r\n
section_category_strict=""\r\n
count=""\r\n
transaction_uid=""\r\n
specific_reference\r\n
group_by\r\n
search_result_keys=\'\'\r\n
delivery_mirror_section_title=""\r\n
delivery_own_section_title=""\r\n
source_section_where_expression\r\n
destination_section_where_expression</string> </value>
        </item>
        <item>
            <key> <string>cache_time_</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>class_file_</string> </key>
            <value> <string>ZSQLCatalog.zsqlbrain</string> </value>
        </item>
        <item>
            <key> <string>class_name_</string> </key>
            <value> <string>ZSQLBrain</string> </value>
        </item>
        <item>
            <key> <string>connection_hook</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>connection_id</string> </key>
            <value> <string>erp5_sql_connection</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>AccountingTransactionModule_zGetAccountingTransactionList</string> </value>
        </item>
        <item>
            <key> <string>max_cache_</string> </key>
            <value> <int>100</int> </value>
        </item>
        <item>
            <key> <string>max_rows_</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>src</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<dtml-let query="portal_catalog.buildSQLQuery(query=portal_catalog.getSecurityQuery(**selection_params), select_expression_key=(\'operation_date\', \'specific_reference\', \'delivery_mirror_section_title\', \'delivery_own_section_title\'), **selection_params)">\n
<dtml-let search_result_keys="search_result_keys or portal_catalog.getCatalogSearchResultKeys()">\n
<dtml-let use_movement_table="from_date or to_date or at_date or resource or stat or amount or amount_range_min or amount_range_max">\n
<dtml-let accounting_movement_list="portal_url.getPortalObject().getPortalAccountingMovementTypeList()">\n
\n
\n
<dtml-comment>\n
#################################################\n
#                                               #\n
#   If both entity and section_category are NOT #\n
#                                               #\n
#################################################\n
</dtml-comment>\n
<dtml-if "not (entity or section_category)">\n
        SELECT\n
      <dtml-if stat>\n
        SUM(stock.total_price) AS total_price\n
      <dtml-elif count>\n
        COUNT(DISTINCT catalog.uid) AS count\n
      <dtml-else>\n
        <dtml-if "query[\'select_expression\']">\n
          <dtml-var "query[\'select_expression\']">\n
          <dtml-in "search_result_keys">,<dtml-var sequence-item></dtml-in>\n
          , delivery.start_date as operation_date\n
          , \'source\' as section_mark\n
          , catalog.reference as specific_reference\n
        <dtml-else>\n
        DISTINCT\n
        <dtml-in "search_result_keys">\n
          <dtml-unless sequence-start>,</dtml-unless>\n
          <dtml-var sequence-item>\n
        </dtml-in>\n
        , delivery.start_date as operation_date\n
        , \'source\' as section_mark\n
        , catalog.reference as specific_reference\n
        </dtml-if>\n
      </dtml-if>\n
    \n
    FROM\n
      <dtml-in prefix="table" expr="query[\'from_table_list\']">\n
        <dtml-if "table_key not in (\'delivery\', \'catalog\')">\n
          <dtml-var table_item> AS <dtml-var table_key>,\n
        </dtml-if>\n
      </dtml-in>\n
      <dtml-if selection_domain>\n
        <dtml-var "portal_selections.buildSQLJoinExpressionFromDomainSelection(selection_domain)">,\n
      </dtml-if>\n
      <dtml-if selection_report>\n
        <dtml-var "portal_selections.buildSQLJoinExpressionFromDomainSelection(selection_report)">,\n
      </dtml-if>\n
      <dtml-if use_movement_table> movement,  </dtml-if>\n
      <dtml-if "stat or omit_input or omit_output or node">\n
          stock, catalog as child,\n
        <dtml-unless section_category>category,</dtml-unless>\n
      </dtml-if>\n
      <dtml-if "section_category">category, catalog as section, </dtml-if>\n
      catalog,\n
      delivery\n
    \n
    WHERE\n
      delivery.uid = catalog.uid\n
      <dtml-if "query[\'where_expression\']">\n
        AND <dtml-var "query[\'where_expression\']">\n
      </dtml-if>\n
      <dtml-if selection_domain>\n
        AND <dtml-var "portal_selections.buildSQLExpressionFromDomainSelection(selection_domain)">\n
      </dtml-if>\n
      <dtml-if selection_report>\n
        AND <dtml-var "portal_selections.buildSQLExpressionFromDomainSelection(selection_report, strict_membership=1)">\n
      </dtml-if>\n
      <dtml-if specific_reference> AND (\n
                catalog.source_reference LIKE\n
                    <dtml-sqlvar specific_reference type="string">\n
            OR  catalog.destination_reference LIKE\n
              <dtml-sqlvar specific_reference type="string"> )</dtml-if>\n
      <dtml-if transaction_uid>\n
        AND catalog.uid = <dtml-var transaction_uid> </dtml-if>\n
      <dtml-if amount>\n
        AND ABS(movement.quantity) = <dtml-sqlvar amount type="float">\n
      </dtml-if>\n
      <dtml-if amount_range_min>\n
        AND ABS(movement.quantity) >= <dtml-sqlvar amount_range_min type="float">\n
      </dtml-if>\n
      <dtml-if amount_range_max>\n
        AND ABS(movement.quantity) < <dtml-sqlvar amount_range_max type="float">\n
      </dtml-if>\n
      <dtml-if creation_date_range_min>\n
        AND catalog.creation_date >=\n
            <dtml-sqlvar creation_date_range_min type="datetime"> </dtml-if>\n
      <dtml-if creation_date_range_max>\n
        AND catalog.creation_date <\n
            <dtml-sqlvar "creation_date_range_max+1" type="datetime"> </dtml-if>\n
      <dtml-if use_movement_table>\n
        AND movement.is_accountable\n
        AND movement.explanation_uid = catalog.uid </dtml-if>\n
      <dtml-if resource> AND movement.resource_uid =\n
          <dtml-var "restrictedTraverse(resource).getUid()"> </dtml-if>\n
      <dtml-if entity> AND (\n
         delivery.destination_section_uid =\n
                      <dtml-var "restrictedTraverse(entity).getUid()">\n
         OR delivery.source_section_uid =\n
                      <dtml-var "restrictedTraverse(entity).getUid()">\n
         )</dtml-if>\n
      <dtml-if section_category> AND (\n
          (  category.uid = delivery.destination_section_uid\n
               )  OR ( category.uid = delivery.source_section_uid ) )\n
        AND section.portal_type = "Organisation"\n
        AND section.uid = category.uid\n
        AND category.category_uid =\n
        <dtml-var "portal_categories.restrictedTraverse(section_category).getUid()">\n
        <dtml-if "section_category_strict">AND category.category_strict_membership = 1</dtml-if>\n
      </dtml-if>\n
      \n
      <dtml-if from_date>\n
        AND delivery.start_date >= <dtml-sqlvar from_date type="datetime">\n
      </dtml-if>\n
      <dtml-if to_date>\n
        AND delivery.start_date <= <dtml-sqlvar expr="to_date+1" type="datetime">\n
      </dtml-if>\n
      <dtml-if at_date>\n
        AND delivery.start_date < <dtml-sqlvar at_date type="datetime">\n
      </dtml-if>\n
    \n
      <dtml-if node>\n
        <dtml-if stat>\n
          AND stock.uid IN (\n
              SELECT child.uid from catalog as child\n
               WHERE category.uid = stock.section_uid\n
                 AND child.parent_uid = catalog.uid\n
              HAVING (SELECT count(stock.uid) from stock, catalog as child\n
                       WHERE stock.uid = child.uid \n
                         AND child.parent_uid = catalog.uid\n
                         AND (\n
                        <dtml-in node>\n
                          <dtml-unless sequence-start>OR</dtml-unless>\n
                             stock.node_uid =\n
                                <dtml-var "restrictedTraverse(_[\'sequence-item\']).getUid()">\n
                        </dtml-in> )\n
                    )\n
              )\n
        <dtml-else>\n
          AND category.uid = stock.section_uid\n
          AND child.uid = stock.uid\n
          AND child.parent_uid = catalog.uid\n
          AND (\n
          <dtml-in node>\n
            <dtml-unless sequence-start>OR</dtml-unless>\n
               stock.node_uid =\n
                  <dtml-var "restrictedTraverse(_[\'sequence-item\']).getUid()">\n
          </dtml-in> )\n
        </dtml-if>\n
      </dtml-if>\n
    \n
      <dtml-if stat>\n
        AND category.uid = stock.section_uid\n
        AND child.uid = stock.uid\n
        AND child.parent_uid = catalog.uid\n
        AND <dtml-sqltest accounting_movement_list type=string column=child.portal_type op=eq multiple>\n
        <dtml-if omit_input> AND stock.total_price < 0\n
                             AND stock.uid = movement.uid\n
        </dtml-if>\n
        <dtml-if omit_output> AND stock.total_price > 0\n
                              AND stock.uid = movement.uid\n
        </dtml-if>\n
      </dtml-if>\n
      <dtml-if expr="selection_name is not None and portal_selections.getSelectionInvertModeFor(selection_name) and len(portal_selections.getSelectionInvertModeUidListFor(selection_name)) > 0">\n
        AND ( 0 = 1\n
          <dtml-in expr="portal_selections.getSelectionInvertModeUidListFor(selection_name)">\n
            OR catalog.uid = <dtml-var sequence-item>\n
          </dtml-in>\n
        )\n
      </dtml-if>\n
    \n
    <dtml-unless count>\n
      <dtml-if "query[\'order_by_expression\']">\n
        ORDER BY <dtml-var "query[\'order_by_expression\']">\n
      </dtml-if>\n
      <dtml-if "query[\'limit_expression\']">\n
        LIMIT <dtml-var "query[\'limit_expression\']">\n
      </dtml-if>\n
    </dtml-unless>\n
\n
</dtml-if>\n
\n
\n
\n
\n
<dtml-comment>\n
#################################################\n
#                                               #\n
#   If entity or section_category IS EXISTS     #\n
#                                               #\n
#################################################\n
</dtml-comment>\n
<dtml-if "entity or section_category">\n
\n
        <dtml-if stat>\n
          SELECT SUM(total_price) AS total_price FROM (\n
          SELECT DISTINCT total_price, uid FROM (\n
        <dtml-elif count>\n
          SELECT COUNT(DISTINCT uid) AS count FROM (\n
        <dtml-else>\n
          SELECT\n
          <dtml-if "query[\'select_expression\']">\n
            <dtml-var "query[\'select_expression\']">\n
            <dtml-in "search_result_keys">,<dtml-var sequence-item></dtml-in>\n
          <dtml-else>\n
           catalog.*,\n
          ( SELECT title FROM catalog as mirror_catalog WHERE mirror_catalog.uid=catalog.delivery_mirror_section_uid ) AS delivery_mirror_section_title,\n
          ( SELECT title FROM catalog as own_catalog WHERE own_catalog.uid=catalog.delivery_own_section_uid ) AS delivery_own_section_title,\n
          ( SELECT IFNULL(SUM(stock.total_price), 0) FROM stock, catalog AS child WHERE child.uid = stock.uid AND child.parent_uid = catalog.uid AND stock.section_uid=catalog.category_uid AND stock.total_price > 0 AND <dtml-sqltest accounting_movement_list type=string column=child.portal_type op=eq multiple>) AS debit,\n
          ( SELECT IFNULL(-SUM(stock.total_price), 0) FROM stock, catalog AS child WHERE child.uid = stock.uid AND child.parent_uid = catalog.uid AND stock.section_uid=catalog.category_uid AND stock.total_price < 0 AND <dtml-sqltest accounting_movement_list type=string column=child.portal_type op=eq multiple>) AS credit\n
          </dtml-if>\n
          FROM (\n
           SELECT *\n
           FROM (\n
        </dtml-if>\n
\n
<dtml-comment>\n
         ##################\n
         #                #\n
         # Source Section #\n
         #                #\n
         ##################\n
</dtml-comment>\n
\n
        (\n
            SELECT\n
          <dtml-if stat>\n
            stock.total_price, child.uid\n
          <dtml-elif count>\n
            catalog.uid\n
          <dtml-else>\n
            DISTINCT\n
            delivery.start_date as operation_date\n
            , delivery.destination_section_uid as delivery_mirror_section_uid\n
            , delivery.source_section_uid as delivery_own_section_uid\n
            , \'source\' as section_mark\n
            , catalog.source_reference as specific_reference\n
            , catalog.*\n
            <dtml-if "section_category">, category.uid as category_uid</dtml-if>\n
            <dtml-if "not (stat or count) and query[\'order_by_expression\']">\n
              <dtml-in "query[\'order_by_expression\'].split(\', \')">\n
                <dtml-unless "\'operation_date\' in _[\'sequence-item\'] or \'specific_reference\' in _[\'sequence-item\'] or \'`catalog`.\' in _[\'sequence-item\']">\n
                , <dtml-var expr="_[\'sequence-item\'].split(\' \')[0]">\n
                </dtml-unless>\n
              </dtml-in>\n
            </dtml-if>\n
          </dtml-if>\n
        \n
        FROM\n
          <dtml-in prefix="table" expr="query[\'from_table_list\']">\n
            <dtml-if "table_key not in (\'delivery\', \'catalog\')">\n
              <dtml-var table_item> AS <dtml-var table_key>,\n
            </dtml-if>\n
          </dtml-in>\n
          <dtml-if selection_domain>\n
            <dtml-var "portal_selections.buildSQLJoinExpressionFromDomainSelection(selection_domain)">,\n
          </dtml-if>\n
          <dtml-if selection_report>\n
            <dtml-var "portal_selections.buildSQLJoinExpressionFromDomainSelection(selection_report)">,\n
          </dtml-if>\n
          <dtml-if use_movement_table> movement,  </dtml-if>\n
          <dtml-if "stat or omit_input or omit_output or node">\n
              stock, catalog as child, </dtml-if>\n
          <dtml-if "section_category">category, catalog as section, </dtml-if>\n
          <dtml-if "delivery_mirror_section_title">delivery AS mirror_section_delivery, catalog AS mirror_section_catalog,</dtml-if>\n
          <dtml-if "delivery_own_section_title">delivery AS own_section_delivery, catalog AS own_section_catalog,</dtml-if>\n
          catalog,\n
          delivery\n
        \n
        WHERE\n
          delivery.uid = catalog.uid\n
          <dtml-if "query[\'where_expression\']">\n
            AND <dtml-var "query[\'where_expression\']">\n
          </dtml-if>\n
          <dtml-if source_section_where_expression>\n
            AND <dtml-var source_section_where_expression>\n
          </dtml-if>\n
          <dtml-if selection_domain>\n
            AND <dtml-var "portal_selections.buildSQLExpressionFromDomainSelection(selection_domain)">\n
          </dtml-if>\n
          <dtml-if selection_report>\n
            AND <dtml-var "portal_selections.buildSQLExpressionFromDomainSelection(selection_report, strict_membership=1)">\n
          </dtml-if>\n
          <dtml-if specific_reference>\n
            AND catalog.source_reference LIKE <dtml-sqlvar specific_reference type="string">\n
          </dtml-if>\n
          <dtml-if transaction_uid>\n
            AND catalog.uid = <dtml-var transaction_uid> </dtml-if>\n
          <dtml-if "amount or amount_range_min or amount_range_max">\n
            AND EXISTS\n
              (SELECT * FROM stock, catalog as child WHERE\n
               stock.uid=child.uid AND child.parent_uid=catalog.uid AND <dtml-sqltest accounting_movement_list type=string column=child.portal_type op=eq multiple>\n
               <dtml-if amount>\n
                 AND <dtml-sqltest amount column="ABS(stock.total_price)" type=float op=eq>\n
               </dtml-if>\n
               <dtml-if amount_range_min>\n
                 AND <dtml-sqltest amount_range_min column="ABS(stock.total_price)" type=float op=ge>\n
               </dtml-if>\n
               <dtml-if amount_range_max>\n
                 AND <dtml-sqltest amount_range_max column="ABS(stock.total_price)" type=float op=lt>\n
               </dtml-if>\n
              )\n
          </dtml-if>\n
          <dtml-if creation_date_range_min>\n
            AND catalog.creation_date >=\n
                <dtml-sqlvar creation_date_range_min type="datetime"> </dtml-if>\n
          <dtml-if creation_date_range_max>\n
            AND catalog.creation_date <\n
                <dtml-sqlvar "creation_date_range_max+1" type="datetime"> </dtml-if>\n
          <dtml-if use_movement_table>\n
            AND movement.is_accountable\n
            AND movement.explanation_uid = catalog.uid </dtml-if>\n
          <dtml-if resource> AND movement.resource_uid =\n
              <dtml-var "restrictedTraverse(resource).getUid()"> </dtml-if>\n
          -- SOURCE SECTION!!!!!\n
          <dtml-if entity>\n
            AND delivery.destination_section_uid =<dtml-var "restrictedTraverse(entity).getUid()">\n
          </dtml-if>\n
          <dtml-if section_category>\n
            AND category.uid = delivery.source_section_uid\n
            AND section.portal_type = "Organisation"\n
            AND section.uid = category.uid\n
            AND category.category_uid =\n
            <dtml-var "portal_categories.restrictedTraverse(section_category).getUid()">\n
            <dtml-if "section_category_strict">AND category.category_strict_membership = 1</dtml-if>\n
          </dtml-if>\n
          <dtml-if "delivery_mirror_section_title">\n
            AND mirror_section_catalog.uid = mirror_section_delivery.destination_section_uid\n
            AND mirror_section_delivery.uid = catalog.uid\n
            AND <dtml-sqltest delivery_mirror_section_title type=string op=like column=mirror_section_catalog.title>\n
          </dtml-if>\n
          <dtml-if "delivery_own_section_title">\n
            AND own_section_catalog.uid = own_section_delivery.source_section_uid\n
            AND own_section_delivery.uid = catalog.uid\n
            AND <dtml-sqltest delivery_own_section_title type=string op=like column=own_section_catalog.title>\n
          </dtml-if>\n
          \n
          <dtml-if from_date>\n
            AND delivery.start_date >= <dtml-sqlvar from_date type="datetime">\n
          </dtml-if>\n
          <dtml-if to_date>\n
            AND delivery.start_date <= <dtml-sqlvar expr="to_date.latestTime()" type="datetime">\n
          </dtml-if>\n
          <dtml-if at_date>\n
            AND delivery.start_date < <dtml-sqlvar at_date type="datetime">\n
          </dtml-if>\n
        \n
          <dtml-if node>\n
            <dtml-if stat>\n
              AND stock.uid IN (\n
                  SELECT child.uid from catalog as child\n
                   WHERE category.uid = stock.section_uid\n
                     AND child.parent_uid = catalog.uid\n
                  HAVING (SELECT count(stock.uid) from stock, catalog as child\n
                           WHERE stock.uid = child.uid \n
                             AND child.parent_uid = catalog.uid\n
                             AND (\n
                            <dtml-in node>\n
                              <dtml-unless sequence-start>OR</dtml-unless>\n
                                 stock.node_uid =\n
                                    <dtml-var "restrictedTraverse(_[\'sequence-item\']).getUid()">\n
                            </dtml-in> )\n
                        )\n
                  )\n
            <dtml-else>\n
              AND category.uid = stock.section_uid\n
              AND child.uid = stock.uid\n
              AND child.parent_uid = catalog.uid\n
              AND (\n
              <dtml-in node>\n
                <dtml-unless sequence-start>OR</dtml-unless>\n
                   stock.node_uid =\n
                      <dtml-var "restrictedTraverse(_[\'sequence-item\']).getUid()">\n
              </dtml-in> )\n
            </dtml-if>\n
          </dtml-if>\n
        \n
          <dtml-if stat>\n
            AND category.uid = stock.section_uid\n
            AND child.uid = stock.uid\n
            AND child.parent_uid = catalog.uid\n
            AND <dtml-sqltest accounting_movement_list type=string column=child.portal_type op=eq multiple>\n
            <dtml-if omit_input> AND stock.total_price < 0\n
                                 AND stock.uid = movement.uid\n
            </dtml-if>\n
            <dtml-if omit_output> AND stock.total_price > 0\n
                                  AND stock.uid = movement.uid\n
            </dtml-if>\n
          </dtml-if>\n
          <dtml-if expr="selection_name is not None and portal_selections.getSelectionInvertModeFor(selection_name) and len(portal_selections.getSelectionInvertModeUidListFor(selection_name)) > 0">\n
            AND ( 0 = 1\n
              <dtml-in expr="portal_selections.getSelectionInvertModeUidListFor(selection_name)">\n
                OR catalog.uid = <dtml-var sequence-item>\n
              </dtml-in>\n
            )\n
          </dtml-if>\n
\n
          <dtml-if "not (count or stat) and query[\'limit_expression\'] and query[\'limit_expression\'].startswith(\'0\')">\n
            <dtml-if "query[\'order_by_expression\']">\n
              ORDER BY <dtml-var "query[\'order_by_expression\']">\n
            </dtml-if>\n
            LIMIT <dtml-var "query[\'limit_expression\']">\n
          </dtml-if>\n
        )\n
\n
\n
\n
UNION\n
\n
\n
\n
<dtml-comment>\n
         #######################\n
         #                     #\n
         # Destination Section #\n
         #                     #\n
         #######################\n
</dtml-comment>\n
\n
        (\n
            SELECT\n
          <dtml-if stat>\n
            stock.total_price, child.uid\n
          <dtml-elif count>\n
            catalog.uid\n
          <dtml-else>\n
            DISTINCT\n
            delivery.stop_date as operation_date\n
            , delivery.source_section_uid as delivery_mirror_section_uid\n
            , delivery.destination_section_uid as delivery_own_section_uid\n
            , \'destination\' as section_mark\n
            , catalog.destination_reference as specific_reference\n
            , catalog.*\n
            <dtml-if "section_category">, category.uid as category_uid</dtml-if>\n
            <dtml-if "not (stat or count) and query[\'order_by_expression\']">\n
              <dtml-in "query[\'order_by_expression\'].split(\', \')">\n
                <dtml-unless "\'operation_date\' in _[\'sequence-item\'] or \'specific_reference\' in _[\'sequence-item\'] or \'`catalog`.\' in _[\'sequence-item\']">\n
                , <dtml-var expr="_[\'sequence-item\'].split(\' \')[0]">\n
                </dtml-unless>\n
              </dtml-in>\n
            </dtml-if>\n
          </dtml-if>\n
        \n
        FROM\n
          <dtml-in prefix="table" expr="query[\'from_table_list\']">\n
            <dtml-if "table_key not in (\'delivery\', \'catalog\')">\n
              <dtml-var table_item> AS <dtml-var table_key>,\n
            </dtml-if>\n
          </dtml-in>\n
          <dtml-if selection_domain>\n
            <dtml-var "portal_selections.buildSQLJoinExpressionFromDomainSelection(selection_domain)">,\n
          </dtml-if>\n
          <dtml-if selection_report>\n
            <dtml-var "portal_selections.buildSQLJoinExpressionFromDomainSelection(selection_report)">,\n
          </dtml-if>\n
          <dtml-if use_movement_table> movement,  </dtml-if>\n
          <dtml-if "stat or omit_input or omit_output or node">\n
              stock, catalog as child, </dtml-if>\n
          <dtml-if "section_category">category, catalog as section, </dtml-if>\n
          <dtml-if "delivery_mirror_section_title">delivery AS mirror_section_delivery, catalog AS mirror_section_catalog,</dtml-if>\n
          <dtml-if "delivery_own_section_title">delivery AS own_section_delivery, catalog AS own_section_catalog,</dtml-if>\n
          catalog,\n
          delivery\n
        \n
        WHERE\n
          delivery.uid = catalog.uid\n
          <dtml-if "query[\'where_expression\']">\n
            AND <dtml-var "query[\'where_expression\']">\n
          </dtml-if>\n
          <dtml-if destination_section_where_expression>\n
            AND <dtml-var destination_section_where_expression>\n
          </dtml-if>\n
          <dtml-if selection_domain>\n
            AND <dtml-var "portal_selections.buildSQLExpressionFromDomainSelection(selection_domain)">\n
          </dtml-if>\n
          <dtml-if selection_report>\n
            AND <dtml-var "portal_selections.buildSQLExpressionFromDomainSelection(selection_report, strict_membership=1)">\n
          </dtml-if>\n
          <dtml-if specific_reference>\n
            AND catalog.destination_reference LIKE <dtml-sqlvar specific_reference type="string">\n
          </dtml-if>\n
          <dtml-if transaction_uid>\n
            AND catalog.uid = <dtml-var transaction_uid> </dtml-if>\n
          <dtml-if "amount or amount_range_min or amount_range_max">\n
            AND EXISTS\n
              (SELECT * FROM stock, catalog as child WHERE\n
               stock.uid=child.uid AND child.parent_uid=catalog.uid AND <dtml-sqltest accounting_movement_list type=string column=child.portal_type op=eq multiple>\n
               <dtml-if amount>\n
                 AND <dtml-sqltest amount column="ABS(stock.total_price)" type=float op=eq>\n
               </dtml-if>\n
               <dtml-if amount_range_min>\n
                 AND <dtml-sqltest amount_range_min column="ABS(stock.total_price)" type=float op=ge>\n
               </dtml-if>\n
               <dtml-if amount_range_max>\n
                 AND <dtml-sqltest amount_range_max column="ABS(stock.total_price)" type=float op=lt>\n
               </dtml-if>\n
              )\n
          </dtml-if>\n
          <dtml-if creation_date_range_min>\n
            AND catalog.creation_date >=\n
                <dtml-sqlvar creation_date_range_min type="datetime"> </dtml-if>\n
          <dtml-if creation_date_range_max>\n
            AND catalog.creation_date <\n
                <dtml-sqlvar "creation_date_range_max+1" type="datetime"> </dtml-if>\n
          <dtml-if use_movement_table>\n
            AND movement.is_accountable\n
            AND movement.explanation_uid = catalog.uid </dtml-if>\n
          <dtml-if resource> AND movement.resource_uid =\n
              <dtml-var "restrictedTraverse(resource).getUid()"> </dtml-if>\n
          -- DESTINATION SECTION!!!!!\n
          <dtml-if entity>\n
            AND delivery.source_section_uid = <dtml-var "restrictedTraverse(entity).getUid()">\n
          </dtml-if>\n
          <dtml-if section_category>\n
            AND category.uid = delivery.destination_section_uid\n
            AND section.portal_type = "Organisation"\n
            AND section.uid = category.uid\n
            AND category.category_uid =\n
            <dtml-var "portal_categories.restrictedTraverse(section_category).getUid()">\n
            <dtml-if "section_category_strict">AND category.category_strict_membership = 1</dtml-if>\n
          </dtml-if>\n
          <dtml-if "delivery_mirror_section_title">\n
            AND mirror_section_catalog.uid = mirror_section_delivery.source_section_uid\n
            AND mirror_section_delivery.uid = catalog.uid\n
            AND <dtml-sqltest delivery_mirror_section_title type=string op=like column=mirror_section_catalog.title>\n
          </dtml-if>\n
          <dtml-if "delivery_own_section_title">\n
            AND own_section_catalog.uid = own_section_delivery.destination_section_uid\n
            AND own_section_delivery.uid = catalog.uid\n
            AND <dtml-sqltest delivery_own_section_title type=string op=like column=own_section_catalog.title>\n
          </dtml-if>\n
\n
          <dtml-if from_date>\n
            AND delivery.stop_date >= <dtml-sqlvar from_date type="datetime">\n
          </dtml-if>\n
          <dtml-if to_date>\n
            AND delivery.stop_date <= <dtml-sqlvar expr="to_date.latestTime()" type="datetime">\n
          </dtml-if>\n
          <dtml-if at_date>\n
            AND delivery.stop_date < <dtml-sqlvar at_date type="datetime">\n
          </dtml-if>\n
        \n
          <dtml-if node>\n
            <dtml-if stat>\n
              AND stock.uid IN (\n
                  SELECT child.uid from catalog as child\n
                   WHERE category.uid = stock.section_uid\n
                     AND child.parent_uid = catalog.uid\n
                  HAVING (SELECT count(stock.uid) from stock, catalog as child\n
                           WHERE stock.uid = child.uid \n
                             AND child.parent_uid = catalog.uid\n
                             AND (\n
                            <dtml-in node>\n
                              <dtml-unless sequence-start>OR</dtml-unless>\n
                                 stock.node_uid =\n
                                    <dtml-var "restrictedTraverse(_[\'sequence-item\']).getUid()">\n
                            </dtml-in> )\n
                        )\n
                  )\n
            <dtml-else>\n
              AND category.uid = stock.section_uid\n
              AND child.uid = stock.uid\n
              AND child.parent_uid = catalog.uid\n
              AND (\n
              <dtml-in node>\n
                <dtml-unless sequence-start>OR</dtml-unless>\n
                   stock.node_uid =\n
                      <dtml-var "restrictedTraverse(_[\'sequence-item\']).getUid()">\n
              </dtml-in> )\n
            </dtml-if>\n
          </dtml-if>\n
        \n
          <dtml-if stat>\n
            AND category.uid = stock.section_uid\n
            AND child.uid = stock.uid\n
            AND child.parent_uid = catalog.uid\n
            AND <dtml-sqltest accounting_movement_list type=string column=child.portal_type op=eq multiple>\n
            <dtml-if omit_input> AND stock.total_price < 0\n
                                 AND stock.uid = movement.uid\n
            </dtml-if>\n
            <dtml-if omit_output> AND stock.total_price > 0\n
                                  AND stock.uid = movement.uid\n
            </dtml-if>\n
          </dtml-if>\n
          <dtml-if expr="selection_name is not None and portal_selections.getSelectionInvertModeFor(selection_name) and len(portal_selections.getSelectionInvertModeUidListFor(selection_name)) > 0">\n
            AND ( 0 = 1\n
              <dtml-in expr="portal_selections.getSelectionInvertModeUidListFor(selection_name)">\n
                OR catalog.uid = <dtml-var sequence-item>\n
              </dtml-in>\n
            )\n
          </dtml-if>\n
\n
          <dtml-if "not (count or stat) and query[\'limit_expression\'] and query[\'limit_expression\'].startswith(\'0\')">\n
            <dtml-if "query[\'order_by_expression\']">\n
              ORDER BY <dtml-var "query[\'order_by_expression\']">\n
            </dtml-if>\n
            LIMIT <dtml-var "query[\'limit_expression\']">\n
          </dtml-if>\n
\n
        )\n
\n
\n
<dtml-comment>\n
         ##################\n
         #                #\n
         #  ORDER, LIMIT  #\n
         #                #\n
         ##################\n
</dtml-comment>\n
\n
\n
        <dtml-if "count">\n
        ) as catalog\n
        <dtml-elif "stat">\n
        ) as sb\n
        ) as catalog\n
        <dtml-else>\n
        ) as catalog\n
        </dtml-if>\n
\n
        <dtml-if "not (stat or count)">\n
          GROUP BY uid\n
          <dtml-if "query[\'order_by_expression\']">\n
            ORDER BY\n
              <dtml-in "query[\'order_by_expression\'].split(\', \')">\n
               <dtml-if "\'.\' in _[\'sequence-item\']">\n
                <dtml-var expr="_[\'sequence-item\'].split(\'.\')[1]">\n
               <dtml-else>\n
                <dtml-var sequence-item>\n
               </dtml-if><dtml-unless sequence-end>,</dtml-unless>\n
              </dtml-in>\n
          </dtml-if>\n
          <dtml-if "query[\'limit_expression\']">\n
            LIMIT <dtml-var "query[\'limit_expression\']">\n
          </dtml-if>\n
        ) as catalog\n
          <dtml-if expr="query[\'group_by_expression\']">\n
             GROUP BY <dtml-var expr="query[\'group_by_expression\']">\n
          </dtml-if>\n
\n
        </dtml-if>\n
\n
</dtml-if>\n
</dtml-let></dtml-let></dtml-let></dtml-let>\n
\n
<dtml-comment> vim: syntax=dtml\n
</dtml-comment>\n


]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
