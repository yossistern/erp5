<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="SQL" module="Products.ZSQLMethods.SQL"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Use_Database_Methods_Permission</string> </key>
            <value>
              <list>
                <string>Member</string>
              </list>
            </value>
        </item>
        <item>
            <key> <string>allow_simple_one_argument_traversal</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>arguments_src</string> </key>
            <value> <string>from_table_list:list\r\n
where_expression\r\n
order_by_expression\r\n
group_by_expression\r\n
selection_domain\r\n
select_expression\r\n
selection_report\r\n
ignore_variation\r\n
standardize\r\n
omit_simulation\r\n
only_accountable\r\n
omit_input\r\n
omit_output\r\n
input_simulation_state:list\r\n
output_simulation_state:list\r\n
precision\r\n
inventory_list\r\n
statistic\r\n
convert_quantity_result\r\n
quantity_unit_uid\r\n
stock_table_id=stock\r\n
transformed_uid\r\n
transformed_variation_text</string> </value>
        </item>
        <item>
            <key> <string>cache_time_</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>class_file_</string> </key>
            <value> <string>ERP5.InventoryBrain</string> </value>
        </item>
        <item>
            <key> <string>class_name_</string> </key>
            <value> <string>InventoryListBrain</string> </value>
        </item>
        <item>
            <key> <string>connection_hook</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>connection_id</string> </key>
            <value> <string>erp5_sql_connection</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Resource_zGetInventoryList</string> </value>
        </item>
        <item>
            <key> <string>max_cache_</string> </key>
            <value> <int>100</int> </value>
        </item>
        <item>
            <key> <string>max_rows_</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>src</string> </key>
            <value> <string encoding="cdata"><![CDATA[

SELECT\n
<dtml-if expr="precision is not None">\n
  SUM(ROUND(<dtml-var stock_table_id>.quantity\n
    <dtml-if transformed_uid> * transformation.quantity</dtml-if>, <dtml-var precision>)) AS inventory,\n
  SUM(ROUND(<dtml-var stock_table_id>.quantity\n
    <dtml-if transformed_uid> * transformation.quantity</dtml-if>, <dtml-var precision>)) AS total_quantity,\n
  <dtml-if convert_quantity_result>\n
    SUM(ROUND(<dtml-var stock_table_id>.quantity * measure.quantity\n
      <dtml-if quantity_unit_uid> / quantity_unit_conversion.quantity</dtml-if>\n
      <dtml-if transformed_uid> * transformation.quantity</dtml-if>, <dtml-var precision>))\n
    AS converted_quantity,\n
  </dtml-if>\n
  IFNULL(SUM(ROUND(<dtml-var stock_table_id>.total_price, <dtml-var precision>)), 0) AS total_price\n
<dtml-else>\n
  SUM(<dtml-var stock_table_id>.quantity <dtml-if transformed_uid> * transformation.quantity</dtml-if>) AS inventory,\n
  SUM(<dtml-var stock_table_id>.quantity <dtml-if transformed_uid> * transformation.quantity</dtml-if>) AS total_quantity,\n
  <dtml-if convert_quantity_result>\n
    ROUND(SUM(<dtml-var stock_table_id>.quantity * measure.quantity\n
      <dtml-if quantity_unit_uid> / quantity_unit_conversion.quantity</dtml-if>\n
      <dtml-if transformed_uid> * transformation.quantity</dtml-if>), 12)\n
    AS converted_quantity,\n
  </dtml-if>\n
  IFNULL(SUM(<dtml-var stock_table_id>.total_price), 0) AS total_price\n
</dtml-if>\n
<dtml-if inventory_list>\n
  ,\n
  <dtml-var stock_table_id>.node_uid AS node_uid,\n
  <dtml-var stock_table_id>.section_uid AS section_uid,\n
  <dtml-if transformed_uid>\n
    transformed_resource.title AS transformed_resource_title,\n
    transformed_resource.relative_url AS transformed_resource_relative_url,\n
    transformation.transformed_uid AS transformed_resource_uid,\n
    transformation.transformed_variation_text AS transformed_variation_text,\n
  </dtml-if>\n
  <dtml-var stock_table_id>.resource_uid AS resource_uid,\n
  <dtml-var stock_table_id>.variation_text AS variation_text,\n
  <dtml-var stock_table_id>.sub_variation_text AS sub_variation_text,\n
  <dtml-var stock_table_id>.uid AS stock_uid,\n
  <dtml-var stock_table_id>.date as date,\n
  <dtml-var stock_table_id>.mirror_date as mirror_date,\n
  <dtml-var stock_table_id>.simulation_state as simulation_state,\n
  <dtml-var stock_table_id>.mirror_section_uid as mirror_section_uid,\n
  <dtml-var stock_table_id>.payment_uid as payment_uid,\n
  <dtml-var stock_table_id>.mirror_node_uid as mirror_node_uid,\n
  <dtml-var stock_table_id>.function_uid as function_uid,\n
  <dtml-var stock_table_id>.project_uid as project_uid,\n
  <dtml-var stock_table_id>.funding_uid as funding_uid,\n
  <dtml-var stock_table_id>.payment_request_uid as payment_request_uid,\n
  catalog.path as path\n
</dtml-if>\n
<dtml-if statistic>\n
  ,\n
  COUNT(DISTINCT <dtml-var stock_table_id>.variation_text) AS variation_text,\n
  MAX(<dtml-var stock_table_id>.resource_uid) AS resource_uid,\n
  COUNT(DISTINCT <dtml-var stock_table_id>.uid) AS stock_uid,\n
  MAX(<dtml-var stock_table_id>.date) AS date\n
</dtml-if>\n
<dtml-if select_expression>, <dtml-var select_expression></dtml-if>\n
\n
FROM\n
  catalog, <dtml-var stock_table_id>\n
<dtml-if quantity_unit_uid>\n
  LEFT JOIN quantity_unit_conversion ON \n
    (quantity_unit_conversion.resource_uid = <dtml-var stock_table_id>.resource_uid\n
    AND quantity_unit_conversion.quantity_unit_uid = <dtml-sqlvar quantity_unit_uid type=int>)\n
</dtml-if>\n
<dtml-in prefix="table" expr="from_table_list"> \n
  <dtml-if expr="table_key not in (\'catalog\', stock_table_id)">\n
  , <dtml-var table_item> AS <dtml-var table_key>\n
  </dtml-if>\n
</dtml-in>\n
  <dtml-if selection_domain>, <dtml-var "portal_selections.buildSQLJoinExpressionFromDomainSelection(selection_domain)"> </dtml-if>\n
  <dtml-if selection_report>, <dtml-var "portal_selections.buildSQLJoinExpressionFromDomainSelection(selection_report)"> </dtml-if>\n
  <dtml-if transformed_uid>, transformation, catalog as transformed_resource</dtml-if>\n
\n
WHERE\n
  <dtml-var stock_table_id>.uid = catalog.uid\n
<dtml-if where_expression>\n
  AND <dtml-var where_expression>\n
</dtml-if>\n
\n
<dtml-if transformed_uid>\n
  AND transformation.uid = <dtml-var stock_table_id>.resource_uid\n
  AND <dtml-var stock_table_id>.variation_text = transformation.variation_text\n
\n
  AND transformed_resource.uid = transformation.transformed_uid\n
  AND <dtml-sqltest transformed_uid column="transformation.transformed_uid" type=int multiple>\n
  <dtml-if transformed_variation_text>\n
  AND <dtml-sqltest transformed_variation_text column="transformation.transformed_variation_text" type=string>\n
  </dtml-if>\n
</dtml-if>\n
\n
<dtml-if omit_simulation>\n
  AND <dtml-var stock_table_id>.portal_type != \'Simulation Movement\'\n
</dtml-if>\n
<dtml-if only_accountable>\n
  AND <dtml-var stock_table_id>.is_accountable\n
</dtml-if>\n
<dtml-if selection_domain>\n
  AND <dtml-var "portal_selections.buildSQLExpressionFromDomainSelection(selection_domain, join_table=stock_table_id, join_column=\'node_uid\')">\n
</dtml-if>\n
<dtml-if selection_report>\n
  AND <dtml-var "portal_selections.buildSQLExpressionFromDomainSelection(selection_report, strict_membership=1)">\n
</dtml-if>\n
\n
<dtml-if convert_quantity_result>\n
  AND concat(<dtml-var stock_table_id>.variation_text,\'\\n\') REGEXP measure.variation\n
</dtml-if>\n
\n
<dtml-if group_by_expression>\n
GROUP BY\n
    <dtml-if transformed_uid>transformation.transformed_uid,</dtml-if>\n
    <dtml-var group_by_expression>\n
</dtml-if>\n
<dtml-if order_by_expression>\n
ORDER BY\n
  <dtml-var order_by_expression>\n
</dtml-if>\n


]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
